{
    "queries": [
        {
            "name": "All Shortest Paths to Domain (including Computers)",
            "queryList": [
                {
                    "final": false,
                    "title": "Select a Domain...",
                    "query": "MATCH (d:Domain) RETURN d.name ORDER BY d.name ASC"
                },
                {
                    "final": true,
                    "query": "MATCH p = allShortestPaths((uc)-[r:{}*1..]->(d:Domain {name: $result})) WHERE (uc:User OR uc:Computer) RETURN p",
                    "endNode": "{}"
                }
            ]
        },
        {
            "name": "All Shortest Paths to no LAPS",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p = allShortestPaths((uc)-[r:{}*1..]->(c:Computer)) WHERE (uc:User OR uc:Computer) AND NOT uc = c AND c.haslaps = false RETURN p"
                }
            ]
        },
        {
            "name": "All Shortest Paths from Kerberoastable Users",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p = allShortestPaths((u:User)-[r:{}*1..]->(c:Computer)) WHERE u.hasspn = true RETURN p"
                }
            ]
        },
        {
            "name": "All Shortest Paths from Owned Principals (including everything)",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p = allShortestPaths((u:User)-[r:{}*1..]->(a)) WHERE u.owned = true AND u <> a RETURN p"
                }
            ]
        },
        {
            "name": "All Shortest Paths from Owned Principals to Domain",
            "queryList": [
                {
                    "final": false,
                    "title": "Select a Domain...",
                    "query": "MATCH (d:Domain) RETURN d.name ORDER BY d.name ASC"
                },
                {
                    "final": true,
                    "query": "MATCH p = allShortestPaths((o)-[r:{}*1..]->(d:Domain)) WHERE o.owned = true AND d.name = $result RETURN p",
                    "endNode": "{}"
                }
            ]
        },
        {
            "name": "All Shortest Paths from Owned Principals to High Value Targets",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p = allShortestPaths((o)-[r:{}*1..]->(h)) WHERE o.owned = true AND h.highvalue = true RETURN p"
                }
            ]
        },
        {
            "name": "All Shortest Paths from Owned Principals to no LAPS",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p = allShortestPaths((o)-[r:{}*1..]->(c:Computer)) WHERE NOT o = c AND o.owned = true AND c.haslaps = false RETURN p"
                }
            ]
        },
        {
            "name": "All Shortest Paths from no Signing to Domain",
            "queryList": [
                {
                    "final": false,
                    "title": "Select a Domain...",
                    "query": "MATCH (d:Domain) RETURN d.name ORDER BY d.name ASC"
                },
                {
                    "final": true,
                    "query": "MATCH p = allShortestPaths((c:Computer)-[r:{}*1..]->(d:Domain)) WHERE c.hassigning = false AND d.name = $result RETURN p",
                    "endNode": "{}"
                }
            ]
        },
        {
            "name": "All Shortest Paths from no Signing to High Value Targets",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p = allShortestPaths((c:Computer)-[r:{}*1..]->(h)) WHERE NOT c = h AND c.hassigning = false AND h.highvalue = true RETURN p"
                }
            ]
        },
        {
            "name": "All Shortest Paths from Domain Users and Domain Computers (including everything)",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p = allShortestPaths((g:Group)-[r:{}*1..]->(a)) WHERE (g.objectid =~ $domain_users_id OR g.objectid =~ $domain_computers_id) AND g <> a RETURN p",
                    "props": {
                        "domain_users_id": "S-1-5-.*-513",
                        "domain_computers_id": "S-1-5-.*-515"
                    }
                }
            ]
        },
        {
            "name": "All Unconstrained Delegation Principals (excluding Domain Controllers and Administrators)",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (dca)-[r:MemberOf*0..]->(g:Group) WHERE g.objectid =~ $domain_controllers_id OR g.objectid =~ $administrators_id WITH COLLECT(dca) AS exclude MATCH p = (d:Domain)-[r:Contains*1..]->(uc) WHERE (uc:User OR uc:Computer) AND uc.unconstraineddelegation = true AND NOT uc IN exclude RETURN p",
                    "props": {
                        "domain_controllers_id": "S-1-5-.*-516",
                        "administrators_id": ".*-S-1-5-32-544"
                    }
                }
            ]
        },
        {
            "name": "All Constrained Delegations",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p = (a)-[:AllowedToDelegate]->(c:Computer) RETURN p"
                }
            ]
        },
        {
            "name": "All Computers Allowed to Delegate for Another Computer",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p = (c1:Computer)-[:AllowedToDelegate]->(c2:Computer) RETURN p"
                }
            ]
        },
        {
            "name": "All ACLs to Computers (excluding High Value Targets)",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p = (ucg)-[r]->(c:Computer) WHERE (ucg:User OR ucg:Computer OR ucg:Group) AND ucg.highvalue = false AND r.isacl = true RETURN p"
                }
            ]
        },
        {
            "name": "All Computers in Domain Admins",
            "queryList": [
                {
                    "final": false,
                    "title": "Select a Domain Admins group...",
                    "query": "MATCH (g:Group) WHERE g.objectid =~ $domain_admins_id RETURN g.name ORDER BY g.name ASC",
                    "props": {
                        "domain_admins_id": "S-1-5-.*-512"
                    }
                },
                {
                    "final": true,
                    "query": "MATCH p = (c:Computer)-[r:MemberOf|HasSIDHistory*1..]->(g:Group) WHERE g.name = $result RETURN p",
                    "endNode": "{}"
                }
            ]
        },
        {
            "name": "All Computers Local Admin to Another Computer",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p = (c1:Computer)-[r1:AdminTo]->(c2:Computer) RETURN p UNION ALL MATCH p = (c3:Computer)-[r2:MemberOf|HasSIDHistory*1..]->(g:Group)-[r3:AdminTo]->(c4:Computer) RETURN p"
                }
            ]
        },
        {
            "name": "All Computers without LAPS",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p = (d:Domain)-[r:Contains*1..]->(c:Computer) WHERE c.haslaps = false RETURN p"
                }
            ]
        },
        {
            "name": "All High Value Targets",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p = (d:Domain)-[r:Contains*1..]->(h) WHERE h.highvalue = true RETURN p"
                }
            ]
        },
        {
            "name": "All Owned Principals",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p = (d:Domain)-[r:Contains*1..]->(o) WHERE o.owned = true RETURN p"
                }
            ]
        },
        {
            "name": "All Users with Password in AD",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p = (d:Domain)-[r:Contains*1..]->(u:User) WHERE u.userpassword IS NOT NULL RETURN p"
                }
            ]
        },
        {
            "name": "All Users with \"Pass\" in AD Description",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p = (d:Domain)-[r:Contains*1..]->(u:User) WHERE u.description =~ '(?i).*pass.*' RETURN p"
                }
            ]
        },
        {
            "name": "All Users with Password not Required",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p = (d:Domain)-[r:Contains*1..]->(u:User) WHERE u.passwordnotreqd = true RETURN p"
                }
            ]
        },
        {
            "name": "All Users with with Same Name in Different Domains",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (u1:User),(u2:User) WHERE split(u1.name,'@')[0] = split(u2.name,'@')[0] AND u1.domain <> u2.domain AND toint(split(u1.objectid,'-')[7]) >= 1000 RETURN u1"
                }
            ]
        },
        {
            "name": "Set DCSync Principals as High Value Targets",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (s)-[r:MemberOf|GetChanges*1..]->(d:Domain) WITH s, d MATCH (s)-[r:MemberOf|GetChangesAll*1..]->(d) WITH s, d MATCH p = (s)-[r:MemberOf|GetChanges|GetChangesAll*1..]->(d) SET s.highvalue = true, s.highvaluereason = 'DCSync Principal' RETURN p"
                }
            ]
        },
        {
            "name": "Set Unconstrained Delegation Principals as High Value Targets",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p = (d:Domain)-[r:Contains*1..]->(uc) WHERE (uc:User OR uc:Computer) AND uc.unconstraineddelegation = true SET uc.highvalue = true, uc.highvaluereason = 'Unconstrained Delegation Principal' RETURN p"
                }
            ]
        },
        {
            "name": "Set Local Admin or Reset Password Principals as High Value Targets",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (a)-[r:AdminTo|ForceChangePassword]->(b) SET a.highvalue = true, a.highvaluereason = 'Local Admin or Reset Password Principal' RETURN a"
                }
            ]
        },
        {
            "name": "Set Principals with Privileges on Computers as High Value Targets",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (a)-[r:AllowedToDelegate|ExecuteDCOM|ForceChangePassword|GenericAll|GenericWrite|Owns|WriteDacl|WriteOwner]->(n:Computer) SET a.highvalue = true, a.highvaluereason = 'Principal with Privileges on Computers' RETURN a"
                }
            ]
        },
        {
            "name": "Set Members of High Value Targets Groups as High Value Targets",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (a)-[r:MemberOf*1..]->(g:Group) WHERE a.highvalue = false AND g.highvalue = true SET a.highvalue = true, a.highvaluereason = 'Member of High Value Target Group' RETURN a"
                }
            ]
        },
        {
            "name": "Remove Inactive Users and Computers from High Value Targets",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (uc) WHERE uc.highvalue = true AND ((uc:User AND uc.enabled = false) OR (uc:Computer AND ((uc.enabled = false) OR (uc.lastlogon > 0 AND uc.lastlogon < (TIMESTAMP() / 1000 - 15552000)) OR (uc.lastlogontimestamp > 0 AND uc.lastlogontimestamp < (TIMESTAMP() / 1000 - 15552000))))) SET uc.highvalue = false, uc.nothighvaluereason = 'Inactive' RETURN uc"
                }
            ]
        },
        {
            "name": "AdminTo or RDP for Lambda accounts",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (m:Group) WHERE m.name =~ '(?i)DOMAIN USERS@.*' OR m.name =~ '(?i)EveryOne@.*' OR m.name =~ '(?i)AUTHENTICATED USERS@.*' MATCH (n:Computer), p=(m)-[r:AdminTo|CanRDP]->(n) RETURN p"
                }
            ]
        },
        {
            "name": "Bad ACLs on Lambda accounts",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (m:Group) WHERE m.name =~ '(?i)DOMAIN USERS@.*' OR m.name =~ '(?i)EveryOne@.*' OR m.name =~ '(?i)AUTHENTICATED USERS@.*' MATCH (n:Computer) MATCH p = (m)-[r]->(n) WHERE r.isacl=true RETURN p"
                }
            ]
        },
        {
            "name": "Path From SPN users to High value target",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (m:User {hasspn:true}),(n {highvalue:true}),p=shortestPath((m)-[r*1..]->(n)) WHERE NONE (r IN relationships(p) WHERE type(r)= 'GetChanges') AND NONE (r in relationships(p) WHERE type(r)='GetChangesAll') AND NOT m=n RETURN p"
                }
            ]
        },
        {
            "name": "----------------------------------------AZURE QUERIES----------------------------------",
            "queryList": [
                {
                    "final": true,
                    "query": ""
                }
            ]
        },
        {
            "name": "Return All Azure Users that are part of the 'Global Administrator' Role",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p =(n)-[r:AZGlobalAdmin*1..]->(m) RETURN p"
                }
            ]
        },
        {
            "name": "Return All On-Prem users with edges to Azure",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH  p=(m:User)-[r:AZResetPassword|AZOwns|AZUserAccessAdministrator|AZContributor|AZAddMembers|AZGlobalAdmin|AZVMContributor|AZOwnsAZAvereContributor]->(n) WHERE m.objectid CONTAINS 'S-1-5-21' RETURN p"
                }
            ]
        },
        {
            "name": "Find all paths to an Azure VM",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p = (n)-[r]->(g:AZVM) RETURN p"
                }
            ]
        },
        {
            "name": "Find all paths to an Azure KeyVault",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p = (n)-[r]->(g:AZKeyVault) RETURN p"
                }
            ]
        },
        {
            "name": "Return All Azure Users and their Groups",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p=(m:AZUser)-[r:MemberOf]->(n) WHERE NOT m.objectid CONTAINS 'S-1-5' RETURN p"
                }
            ]
        },
        {
            "name": "Return All Azure AD Groups that are synchronized with On-Premise AD",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (n:Group) WHERE n.objectid CONTAINS 'S-1-5' AND n.azsyncid IS NOT NULL RETURN n"
                }
            ]
        },
        {
            "name": "Find all Privileged Service Principals",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p = (g:AZServicePrincipal)-[r]->(n) RETURN p"
                }
            ]
        },
        {
            "name": "Find all Owners of Azure Applications22",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p = (n)-[r:AZOwns]->(g:AZApp) RETURN p"
                }
            ]
        },
        {
            "name": "Return All Azure Users",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (n:AZUser) return n"
                }
            ]
        },
        {
            "name": "Return All Azure Applications",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (n:AZApp) return n"
                }
            ]
        },
        {
            "name": "Return All Azure Devices",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (n:AZDevice) return n"
                }
            ]
        },
        {
            "name": "Return All Azure Groups",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (n:AZGroup) return n"
                }
            ]
        },
        {
            "name": "Return all Azure Key Vaults",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (n:AZKeyVault) return n"
                }
            ]
        },
        {
            "name": "Return all Azure Resource Groups",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (n:AZResourceGroup) return n"
                }
            ]
        },
        {
            "name": "Return all Azure Service Principals",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (n:AZServicePrincipal) return n"
                }
            ]
        },
        {
            "name": "Return all Azure Virtual Machines",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (n:AZVM) return n"
                }
            ]
        },
        {
            "name": "Find All Principals with the ‘Contributor’ role",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p = (n)-[r:AZContributor]->(g) RETURN p"
                }
            ]
        },
        {
            "name": "Set AZGlobalAdmin or AZPrivilegedRoleAdmin as High Value Targets",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p =(n)-[r:AZGlobalAdmin|AZPrivilegedRoleAdmin]->(m) SET m.highvalue = true, n.highvalue = true, n.highvaluereason = 'Member of High Value Target Group' RETURN p;"
                }
            ]
        },
        {
            "name": "Set 'AAD DC ADMINISTRATORS' as High Value Targets",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p=(n)-[r:MemberOf]->(m{name:'AAD DC ADMINISTRATORS'}) SET m.highvalue = true, n.highvalue = true, n.highvaluereason = 'Member of High Value Target Group' RETURN p;"
                }
            ]
        }
    ]
}
